# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Provides default value for input field."
directive @default(value: JSON!) on INPUT_FIELD_DEFINITION

"Add date formatting options."
directive @dateformat(difference: String, formatString: String, fromNow: Boolean, locale: String) on FIELD_DEFINITION

"Link to node by foreign-key relation."
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

"Link to File node by relative path."
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

"Proxy resolver from another field."
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

"Infer field types from field values."
directive @infer(
    "Don't add default resolvers to defined fields."
    noDefaultResolvers: Boolean
) on OBJECT

"Do not infer field types from field values."
directive @dontInfer(
    "Don't add default resolvers to defined fields."
    noDefaultResolvers: Boolean
) on OBJECT

"Define the mime-types handled by this type."
directive @mimeTypes(
    "The mime-types handled by this type."
    types: [String!]! = []
) on OBJECT

"Define parent-child relations between types. This is used to add `child*` or `children*` convenience fields like `childImageSharp`."
directive @childOf(
    "Specifies whether a parent can have multiple children of this type or not."
    many: Boolean! = false,
    "A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin."
    mimeTypes: [String!]! = [],
    "A list of types this type is a child of. Usually these are the types handled by a transformer plugin."
    types: [String!]! = []
) on OBJECT

"Adds root query fields for an interface. All implementing types must also implement the Node interface."
directive @nodeInterface on INTERFACE

interface ContentfulEntry {
    contentful_id: String!
    id: ID!
    node_locale: String!
}

interface ContentfulReference {
    contentful_id: String!
    id: ID!
}

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type ContentfulAddress implements ContentfulEntry & ContentfulReference & Node {
    children: [Node!]!
    city: String
    contentful_id: String!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    id: ID!
    internal: Internal!
    name: String
    node_locale: String!
    parent: Node
    phone: String
    position: ContentfulAddressPosition
    spaceId: String
    street: String
    sys: ContentfulAddressSys
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    zip: String
}

type ContentfulAddressConnection {
    distinct(field: ContentfulAddressFieldsEnum!): [String!]!
    edges: [ContentfulAddressEdge!]!
    group(field: ContentfulAddressFieldsEnum!, limit: Int, skip: Int): [ContentfulAddressGroupConnection!]!
    nodes: [ContentfulAddress!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulAddressEdge {
    next: ContentfulAddress
    node: ContentfulAddress!
    previous: ContentfulAddress
}

type ContentfulAddressGroupConnection {
    edges: [ContentfulAddressEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulAddress!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulAddressPosition {
    lat: Float
    lon: Float
}

type ContentfulAddressSys {
    contentType: ContentfulAddressSysContentType
    revision: Int
    type: String
}

type ContentfulAddressSysContentType {
    sys: ContentfulAddressSysContentTypeSys
}

type ContentfulAddressSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulArticles implements ContentfulEntry & ContentfulReference & Node {
    category: ContentfulCategories
    children: [Node!]!
    content: ContentfulArticlesContent
    contentful_id: String!
    cover: ContentfulAsset
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    description: String
    id: ID!
    internal: Internal!
    name: String
    node_locale: String!
    parent: Node
    slug: String
    spaceId: String
    sys: ContentfulArticlesSys
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulArticlesConnection {
    distinct(field: ContentfulArticlesFieldsEnum!): [String!]!
    edges: [ContentfulArticlesEdge!]!
    group(field: ContentfulArticlesFieldsEnum!, limit: Int, skip: Int): [ContentfulArticlesGroupConnection!]!
    nodes: [ContentfulArticles!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulArticlesContent {
    raw: String
}

type ContentfulArticlesEdge {
    next: ContentfulArticles
    node: ContentfulArticles!
    previous: ContentfulArticles
}

type ContentfulArticlesGroupConnection {
    edges: [ContentfulArticlesEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulArticles!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulArticlesSys {
    contentType: ContentfulArticlesSysContentType
    revision: Int
    type: String
}

type ContentfulArticlesSysContentType {
    sys: ContentfulArticlesSysContentTypeSys
}

type ContentfulArticlesSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulAsset implements ContentfulReference & Node {
    children: [Node!]!
    contentful_id: String!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    description: String
    file: ContentfulAssetFile
    fixed(background: String, cropFocus: ContentfulImageCropFocus, height: Int, quality: Int = 50, resizingBehavior: ImageResizingBehavior, toFormat: ContentfulImageFormat = NO_CHANGE, width: Int): ContentfulFixed
    fluid(background: String, cropFocus: ContentfulImageCropFocus, maxHeight: Int, maxWidth: Int, quality: Int = 50, resizingBehavior: ImageResizingBehavior, sizes: String, toFormat: ContentfulImageFormat = NO_CHANGE): ContentfulFluid
    id: ID!
    internal: Internal!
    node_locale: String
    parent: Node
    resize(background: String, cropFocus: ContentfulImageCropFocus, height: Int, jpegProgressive: Boolean = true, quality: Int = 50, resizingBehavior: ImageResizingBehavior, toFormat: ContentfulImageFormat = NO_CHANGE, width: Int): ContentfulResize
    resolutions(background: String, cropFocus: ContentfulImageCropFocus, height: Int, quality: Int = 50, resizingBehavior: ImageResizingBehavior, toFormat: ContentfulImageFormat = NO_CHANGE, width: Int): ContentfulResolutions @deprecated(reason: "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
    sizes(background: String, cropFocus: ContentfulImageCropFocus, maxHeight: Int, maxWidth: Int, quality: Int = 50, resizingBehavior: ImageResizingBehavior, sizes: String, toFormat: ContentfulImageFormat = NO_CHANGE): ContentfulSizes @deprecated(reason: "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
    spaceId: String
    sys: ContentfulAssetSys
    title: String
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulAssetConnection {
    distinct(field: ContentfulAssetFieldsEnum!): [String!]!
    edges: [ContentfulAssetEdge!]!
    group(field: ContentfulAssetFieldsEnum!, limit: Int, skip: Int): [ContentfulAssetGroupConnection!]!
    nodes: [ContentfulAsset!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulAssetEdge {
    next: ContentfulAsset
    node: ContentfulAsset!
    previous: ContentfulAsset
}

type ContentfulAssetFile {
    contentType: String
    details: ContentfulAssetFileDetails
    fileName: String
    url: String
}

type ContentfulAssetFileDetails {
    image: ContentfulAssetFileDetailsImage
    size: Int
}

type ContentfulAssetFileDetailsImage {
    height: Int
    width: Int
}

type ContentfulAssetGroupConnection {
    edges: [ContentfulAssetEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulAsset!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulAssetSys {
    revision: Int
    type: String
}

type ContentfulCategories implements ContentfulEntry & ContentfulReference & Node {
    articles: [ContentfulArticles]
    children: [Node!]!
    contentful_id: String!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    id: ID!
    internal: Internal!
    name: String
    node_locale: String!
    parent: Node
    spaceId: String
    sys: ContentfulCategoriesSys
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulCategoriesConnection {
    distinct(field: ContentfulCategoriesFieldsEnum!): [String!]!
    edges: [ContentfulCategoriesEdge!]!
    group(field: ContentfulCategoriesFieldsEnum!, limit: Int, skip: Int): [ContentfulCategoriesGroupConnection!]!
    nodes: [ContentfulCategories!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulCategoriesEdge {
    next: ContentfulCategories
    node: ContentfulCategories!
    previous: ContentfulCategories
}

type ContentfulCategoriesGroupConnection {
    edges: [ContentfulCategoriesEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulCategories!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulCategoriesSys {
    contentType: ContentfulCategoriesSysContentType
    revision: Int
    type: String
}

type ContentfulCategoriesSysContentType {
    sys: ContentfulCategoriesSysContentTypeSys
}

type ContentfulCategoriesSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulContentType implements Node {
    children: [Node!]!
    description: String
    displayField: String
    id: ID!
    internal: Internal!
    name: String
    parent: Node
    sys: ContentfulContentTypeSys
}

type ContentfulContentTypeConnection {
    distinct(field: ContentfulContentTypeFieldsEnum!): [String!]!
    edges: [ContentfulContentTypeEdge!]!
    group(field: ContentfulContentTypeFieldsEnum!, limit: Int, skip: Int): [ContentfulContentTypeGroupConnection!]!
    nodes: [ContentfulContentType!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulContentTypeEdge {
    next: ContentfulContentType
    node: ContentfulContentType!
    previous: ContentfulContentType
}

type ContentfulContentTypeGroupConnection {
    edges: [ContentfulContentTypeEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulContentType!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulContentTypeSys {
    type: String
}

type ContentfulEntryConnection {
    distinct(field: ContentfulEntryFieldsEnum!): [String!]!
    edges: [ContentfulEntryEdge!]!
    group(field: ContentfulEntryFieldsEnum!, limit: Int, skip: Int): [ContentfulEntryGroupConnection!]!
    nodes: [ContentfulEntry!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulEntryEdge {
    next: ContentfulEntry
    node: ContentfulEntry!
    previous: ContentfulEntry
}

type ContentfulEntryGroupConnection {
    edges: [ContentfulEntryEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulEntry!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ContentfulFluid {
    aspectRatio: Float!
    base64: String
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ContentfulJobs implements ContentfulEntry & ContentfulReference & Node {
    childContentfulJobsDescriptionTextNode: contentfulJobsDescriptionTextNode
    children: [Node!]!
    content: ContentfulJobsContent
    contentful_id: String!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    description: contentfulJobsDescriptionTextNode
    file: ContentfulAsset
    id: ID!
    internal: Internal!
    node_locale: String!
    parent: Node
    slug: String
    spaceId: String
    sys: ContentfulJobsSys
    title: String
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulJobsConnection {
    distinct(field: ContentfulJobsFieldsEnum!): [String!]!
    edges: [ContentfulJobsEdge!]!
    group(field: ContentfulJobsFieldsEnum!, limit: Int, skip: Int): [ContentfulJobsGroupConnection!]!
    nodes: [ContentfulJobs!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulJobsContent {
    raw: String
}

type ContentfulJobsEdge {
    next: ContentfulJobs
    node: ContentfulJobs!
    previous: ContentfulJobs
}

type ContentfulJobsGroupConnection {
    edges: [ContentfulJobsEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulJobs!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulJobsSys {
    contentType: ContentfulJobsSysContentType
    revision: Int
    type: String
}

type ContentfulJobsSysContentType {
    sys: ContentfulJobsSysContentTypeSys
}

type ContentfulJobsSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulOffer implements ContentfulEntry & ContentfulReference & Node {
    children: [Node!]!
    content: ContentfulOfferContent
    contentful_id: String!
    cover: ContentfulAsset
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    description: String
    id: ID!
    internal: Internal!
    name: String
    node_locale: String!
    parent: Node
    services: [String]
    slug: String
    spaceId: String
    sys: ContentfulOfferSys
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulOfferConnection {
    distinct(field: ContentfulOfferFieldsEnum!): [String!]!
    edges: [ContentfulOfferEdge!]!
    group(field: ContentfulOfferFieldsEnum!, limit: Int, skip: Int): [ContentfulOfferGroupConnection!]!
    nodes: [ContentfulOffer!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulOfferContent {
    raw: String
}

type ContentfulOfferEdge {
    next: ContentfulOffer
    node: ContentfulOffer!
    previous: ContentfulOffer
}

type ContentfulOfferGroupConnection {
    edges: [ContentfulOfferEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulOffer!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulOfferSys {
    contentType: ContentfulOfferSysContentType
    revision: Int
    type: String
}

type ContentfulOfferSysContentType {
    sys: ContentfulOfferSysContentTypeSys
}

type ContentfulOfferSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulResize {
    aspectRatio: Float
    base64: String
    height: Int
    src: String
    tracedSVG: String
    width: Int
}

type ContentfulResolutions {
    aspectRatio: Float
    base64: String
    height: Float!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ContentfulService implements ContentfulEntry & ContentfulReference & Node {
    children: [Node!]!
    content: ContentfulServiceContent
    contentful_id: String!
    cover: ContentfulAsset
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    description: String
    id: ID!
    internal: Internal!
    name: String
    node_locale: String!
    parent: Node
    services: [String]
    slug: String
    spaceId: String
    sys: ContentfulServiceSys
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulServiceConnection {
    distinct(field: ContentfulServiceFieldsEnum!): [String!]!
    edges: [ContentfulServiceEdge!]!
    group(field: ContentfulServiceFieldsEnum!, limit: Int, skip: Int): [ContentfulServiceGroupConnection!]!
    nodes: [ContentfulService!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulServiceContent {
    raw: String
}

type ContentfulServiceEdge {
    next: ContentfulService
    node: ContentfulService!
    previous: ContentfulService
}

type ContentfulServiceGroupConnection {
    edges: [ContentfulServiceEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulService!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulServiceSys {
    contentType: ContentfulServiceSysContentType
    revision: Int
    type: String
}

type ContentfulServiceSysContentType {
    sys: ContentfulServiceSysContentTypeSys
}

type ContentfulServiceSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulServices implements ContentfulEntry & ContentfulReference & Node {
    children: [Node!]!
    contentful_id: String!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    id: ID!
    internal: Internal!
    name: String
    node_locale: String!
    order: Int
    parent: Node
    slug: String
    spaceId: String
    sys: ContentfulServicesSys
    text: ContentfulServicesText
    title: String
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulServicesConnection {
    distinct(field: ContentfulServicesFieldsEnum!): [String!]!
    edges: [ContentfulServicesEdge!]!
    group(field: ContentfulServicesFieldsEnum!, limit: Int, skip: Int): [ContentfulServicesGroupConnection!]!
    nodes: [ContentfulServices!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulServicesCp implements ContentfulEntry & ContentfulReference & Node {
    children: [Node!]!
    childrenContentfulServicesCpContentJsonNode: [contentfulServicesCpContentJsonNode]
    content: [contentfulServicesCpContentJsonNode]
    contentful_id: String!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    id: ID!
    image: ContentfulAsset
    internal: Internal!
    name: String
    node_locale: String!
    order: Int
    parent: Node
    slug: String
    spaceId: String
    sys: ContentfulServicesCpSys
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulServicesCpConnection {
    distinct(field: ContentfulServicesCpFieldsEnum!): [String!]!
    edges: [ContentfulServicesCpEdge!]!
    group(field: ContentfulServicesCpFieldsEnum!, limit: Int, skip: Int): [ContentfulServicesCpGroupConnection!]!
    nodes: [ContentfulServicesCp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulServicesCpEdge {
    next: ContentfulServicesCp
    node: ContentfulServicesCp!
    previous: ContentfulServicesCp
}

type ContentfulServicesCpGroupConnection {
    edges: [ContentfulServicesCpEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulServicesCp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulServicesCpSys {
    contentType: ContentfulServicesCpSysContentType
    revision: Int
    type: String
}

type ContentfulServicesCpSysContentType {
    sys: ContentfulServicesCpSysContentTypeSys
}

type ContentfulServicesCpSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulServicesEdge {
    next: ContentfulServices
    node: ContentfulServices!
    previous: ContentfulServices
}

type ContentfulServicesGroupConnection {
    edges: [ContentfulServicesEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulServices!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulServicesSys {
    contentType: ContentfulServicesSysContentType
    revision: Int
    type: String
}

type ContentfulServicesSysContentType {
    sys: ContentfulServicesSysContentTypeSys
}

type ContentfulServicesSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulServicesText {
    raw: String
}

type ContentfulSignature implements ContentfulEntry & ContentfulReference & Node {
    children: [Node!]!
    contentful_id: String!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    firstName: String
    id: ID!
    internal: Internal!
    lastName: String
    legal: Boolean
    node_locale: String!
    parent: Node
    spaceId: String
    sys: ContentfulSignatureSys
    title: [String]
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulSignatureConnection {
    distinct(field: ContentfulSignatureFieldsEnum!): [String!]!
    edges: [ContentfulSignatureEdge!]!
    group(field: ContentfulSignatureFieldsEnum!, limit: Int, skip: Int): [ContentfulSignatureGroupConnection!]!
    nodes: [ContentfulSignature!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulSignatureEdge {
    next: ContentfulSignature
    node: ContentfulSignature!
    previous: ContentfulSignature
}

type ContentfulSignatureGroupConnection {
    edges: [ContentfulSignatureEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulSignature!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulSignatureLogo implements ContentfulEntry & ContentfulReference & Node {
    children: [Node!]!
    contentful_id: String!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    id: ID!
    internal: Internal!
    logo: ContentfulAsset
    node_locale: String!
    parent: Node
    spaceId: String
    sys: ContentfulSignatureLogoSys
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ContentfulSignatureLogoConnection {
    distinct(field: ContentfulSignatureLogoFieldsEnum!): [String!]!
    edges: [ContentfulSignatureLogoEdge!]!
    group(field: ContentfulSignatureLogoFieldsEnum!, limit: Int, skip: Int): [ContentfulSignatureLogoGroupConnection!]!
    nodes: [ContentfulSignatureLogo!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulSignatureLogoEdge {
    next: ContentfulSignatureLogo
    node: ContentfulSignatureLogo!
    previous: ContentfulSignatureLogo
}

type ContentfulSignatureLogoGroupConnection {
    edges: [ContentfulSignatureLogoEdge!]!
    field: String!
    fieldValue: String
    nodes: [ContentfulSignatureLogo!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ContentfulSignatureLogoSys {
    contentType: ContentfulSignatureLogoSysContentType
    revision: Int
    type: String
}

type ContentfulSignatureLogoSysContentType {
    sys: ContentfulSignatureLogoSysContentTypeSys
}

type ContentfulSignatureLogoSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulSignatureSys {
    contentType: ContentfulSignatureSysContentType
    revision: Int
    type: String
}

type ContentfulSignatureSysContentType {
    sys: ContentfulSignatureSysContentTypeSys
}

type ContentfulSignatureSysContentTypeSys {
    id: String
    linkType: String
    type: String
}

type ContentfulSizes {
    aspectRatio: Float!
    base64: String
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    nodes: [Directory!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    nodes: [Directory!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    childImageSharp: ImageSharp
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    nodes: [File!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    nodes: [File!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    gatsbyImageData(
        "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
        background: String = "rgba(0,0,0,0)",
        "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
        blurredOptions: BlurredOptions,
        """

        The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG" and "WEBP".
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [ImageFormat] = [WEBP],
        "If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
        height: Int,
        "Options to pass to sharp when generating JPG images."
        jpgOptions: JPGOptions,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FLUID: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: ImageLayout = FIXED,
        """

        If set, the generated image is a maximum of this height, cropping if necessary.
        If the image layout is "constrained" then the image will be limited to this height.
        If the aspect ratio of the image is different than the source, then the image will be cropped.
        """
        maxHeight: Int,
        """

        Maximum display width of generated files.
        The actual largest image resolution will be this value multipled by the largest value in outputPixelDensities
        This only applies when layout = FLUID or CONSTRAINED. For other layout types, use "width"
        """
        maxWidth: Int,
        """

        A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, 3x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set "background" to use a fixed background color.
        """
        placeholder: ImagePlaceholder = BLURRED,
        "Options to pass to sharp when generating PNG images."
        pngOptions: PNGOptions,
        "The default quality. This is overriden by any format-specific options"
        quality: Int,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
        container will be the full width of the screen. In these cases we will generate an appropriate value.
        """
        sizes: String = "",
        "Options for traced placeholder SVGs. You also should set placeholder to \"SVG\"."
        tracedSVGOptions: Potrace,
        "Options to pass to sharp to control cropping and other image manipulations."
        transformOptions: TransformOptions,
        "Options to pass to sharp when generating WebP images."
        webpOptions: WebPOptions,
        """

        The display width of the generated image.
        The actual largest image resolution will be this value multipled by the largest value in outputPixelDensities
        Ignored if layout = FLUID or CONSTRAINED, where you should use "maxWidth" instead.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
    resolutions(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResolutions @deprecated(reason: "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
    sizes(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpSizes @deprecated(reason: "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type ImageSharpResolutions {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpSizes {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

type Query {
    allContentfulAddress(filter: ContentfulAddressFilterInput, limit: Int, skip: Int, sort: ContentfulAddressSortInput): ContentfulAddressConnection!
    allContentfulArticles(filter: ContentfulArticlesFilterInput, limit: Int, skip: Int, sort: ContentfulArticlesSortInput): ContentfulArticlesConnection!
    allContentfulAsset(filter: ContentfulAssetFilterInput, limit: Int, skip: Int, sort: ContentfulAssetSortInput): ContentfulAssetConnection!
    allContentfulCategories(filter: ContentfulCategoriesFilterInput, limit: Int, skip: Int, sort: ContentfulCategoriesSortInput): ContentfulCategoriesConnection!
    allContentfulContentType(filter: ContentfulContentTypeFilterInput, limit: Int, skip: Int, sort: ContentfulContentTypeSortInput): ContentfulContentTypeConnection!
    allContentfulEntry(filter: ContentfulEntryFilterInput, limit: Int, skip: Int, sort: ContentfulEntrySortInput): ContentfulEntryConnection!
    allContentfulJobs(filter: ContentfulJobsFilterInput, limit: Int, skip: Int, sort: ContentfulJobsSortInput): ContentfulJobsConnection!
    allContentfulJobsDescriptionTextNode(filter: contentfulJobsDescriptionTextNodeFilterInput, limit: Int, skip: Int, sort: contentfulJobsDescriptionTextNodeSortInput): contentfulJobsDescriptionTextNodeConnection!
    allContentfulOffer(filter: ContentfulOfferFilterInput, limit: Int, skip: Int, sort: ContentfulOfferSortInput): ContentfulOfferConnection!
    allContentfulService(filter: ContentfulServiceFilterInput, limit: Int, skip: Int, sort: ContentfulServiceSortInput): ContentfulServiceConnection!
    allContentfulServices(filter: ContentfulServicesFilterInput, limit: Int, skip: Int, sort: ContentfulServicesSortInput): ContentfulServicesConnection!
    allContentfulServicesCp(filter: ContentfulServicesCpFilterInput, limit: Int, skip: Int, sort: ContentfulServicesCpSortInput): ContentfulServicesCpConnection!
    allContentfulServicesCpContentJsonNode(filter: contentfulServicesCpContentJsonNodeFilterInput, limit: Int, skip: Int, sort: contentfulServicesCpContentJsonNodeSortInput): contentfulServicesCpContentJsonNodeConnection!
    allContentfulSignature(filter: ContentfulSignatureFilterInput, limit: Int, skip: Int, sort: ContentfulSignatureSortInput): ContentfulSignatureConnection!
    allContentfulSignatureLogo(filter: ContentfulSignatureLogoFilterInput, limit: Int, skip: Int, sort: ContentfulSignatureLogoSortInput): ContentfulSignatureLogoConnection!
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    contentfulAddress(children: NodeFilterListInput, city: StringQueryOperatorInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, phone: StringQueryOperatorInput, position: ContentfulAddressPositionFilterInput, spaceId: StringQueryOperatorInput, street: StringQueryOperatorInput, sys: ContentfulAddressSysFilterInput, updatedAt: DateQueryOperatorInput, zip: StringQueryOperatorInput): ContentfulAddress
    contentfulArticles(category: ContentfulCategoriesFilterInput, children: NodeFilterListInput, content: ContentfulArticlesContentFilterInput, contentful_id: StringQueryOperatorInput, cover: ContentfulAssetFilterInput, createdAt: DateQueryOperatorInput, date: DateQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, slug: StringQueryOperatorInput, spaceId: StringQueryOperatorInput, sys: ContentfulArticlesSysFilterInput, updatedAt: DateQueryOperatorInput): ContentfulArticles
    contentfulAsset(children: NodeFilterListInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, description: StringQueryOperatorInput, file: ContentfulAssetFileFilterInput, fixed: ContentfulFixedFilterInput, fluid: ContentfulFluidFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, resize: ContentfulResizeFilterInput, resolutions: ContentfulResolutionsFilterInput, sizes: ContentfulSizesFilterInput, spaceId: StringQueryOperatorInput, sys: ContentfulAssetSysFilterInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput): ContentfulAsset
    contentfulCategories(articles: ContentfulArticlesFilterListInput, children: NodeFilterListInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, spaceId: StringQueryOperatorInput, sys: ContentfulCategoriesSysFilterInput, updatedAt: DateQueryOperatorInput): ContentfulCategories
    contentfulContentType(children: NodeFilterListInput, description: StringQueryOperatorInput, displayField: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, parent: NodeFilterInput, sys: ContentfulContentTypeSysFilterInput): ContentfulContentType
    contentfulEntry(contentful_id: StringQueryOperatorInput, id: StringQueryOperatorInput, node_locale: StringQueryOperatorInput): ContentfulEntry
    contentfulJobs(childContentfulJobsDescriptionTextNode: contentfulJobsDescriptionTextNodeFilterInput, children: NodeFilterListInput, content: ContentfulJobsContentFilterInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, date: DateQueryOperatorInput, description: contentfulJobsDescriptionTextNodeFilterInput, file: ContentfulAssetFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, slug: StringQueryOperatorInput, spaceId: StringQueryOperatorInput, sys: ContentfulJobsSysFilterInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput): ContentfulJobs
    contentfulJobsDescriptionTextNode(children: NodeFilterListInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, sys: contentfulJobsDescriptionTextNodeSysFilterInput): contentfulJobsDescriptionTextNode
    contentfulOffer(children: NodeFilterListInput, content: ContentfulOfferContentFilterInput, contentful_id: StringQueryOperatorInput, cover: ContentfulAssetFilterInput, createdAt: DateQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, services: StringQueryOperatorInput, slug: StringQueryOperatorInput, spaceId: StringQueryOperatorInput, sys: ContentfulOfferSysFilterInput, updatedAt: DateQueryOperatorInput): ContentfulOffer
    contentfulService(children: NodeFilterListInput, content: ContentfulServiceContentFilterInput, contentful_id: StringQueryOperatorInput, cover: ContentfulAssetFilterInput, createdAt: DateQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, services: StringQueryOperatorInput, slug: StringQueryOperatorInput, spaceId: StringQueryOperatorInput, sys: ContentfulServiceSysFilterInput, updatedAt: DateQueryOperatorInput): ContentfulService
    contentfulServices(children: NodeFilterListInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, order: IntQueryOperatorInput, parent: NodeFilterInput, slug: StringQueryOperatorInput, spaceId: StringQueryOperatorInput, sys: ContentfulServicesSysFilterInput, text: ContentfulServicesTextFilterInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput): ContentfulServices
    contentfulServicesCp(children: NodeFilterListInput, childrenContentfulServicesCpContentJsonNode: contentfulServicesCpContentJsonNodeFilterListInput, content: contentfulServicesCpContentJsonNodeFilterListInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, image: ContentfulAssetFilterInput, internal: InternalFilterInput, name: StringQueryOperatorInput, node_locale: StringQueryOperatorInput, order: IntQueryOperatorInput, parent: NodeFilterInput, slug: StringQueryOperatorInput, spaceId: StringQueryOperatorInput, sys: ContentfulServicesCpSysFilterInput, updatedAt: DateQueryOperatorInput): ContentfulServicesCp
    contentfulServicesCpContentJsonNode(children: NodeFilterListInput, content: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, sys: contentfulServicesCpContentJsonNodeSysFilterInput, title: StringQueryOperatorInput): contentfulServicesCpContentJsonNode
    contentfulSignature(children: NodeFilterListInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, firstName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, lastName: StringQueryOperatorInput, legal: BooleanQueryOperatorInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, spaceId: StringQueryOperatorInput, sys: ContentfulSignatureSysFilterInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput): ContentfulSignature
    contentfulSignatureLogo(children: NodeFilterListInput, contentful_id: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, logo: ContentfulAssetFilterInput, node_locale: StringQueryOperatorInput, parent: NodeFilterInput, spaceId: StringQueryOperatorInput, sys: ContentfulSignatureLogoSysFilterInput, updatedAt: DateQueryOperatorInput): ContentfulSignatureLogo
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput, resolutions: ImageSharpResolutionsFilterInput, sizes: ImageSharpSizesFilterInput): ImageSharp
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    parent: Node
    pathPrefix: String
    polyfill: Boolean
    port: Int
    siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    nodes: [Site!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteGroupConnection {
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    nodes: [Site!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    componentPath: String
    id: ID!
    internal: Internal!
    internalComponentName: String!
    isCreatedByStatefulCreatePages: Boolean
    matchPath: String
    parent: Node
    path: String!
    pluginCreator: SitePlugin
    pluginCreatorId: String
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: SitePluginPackageJson
    parent: Node
    pluginFilepath: String
    pluginOptions: SitePluginPluginOptions
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePluginPackageJson {
    author: String
    dependencies: [SitePluginPackageJsonDependencies]
    description: String
    devDependencies: [SitePluginPackageJsonDevDependencies]
    keywords: [String]
    license: String
    main: String
    name: String
    peerDependencies: [SitePluginPackageJsonPeerDependencies]
    version: String
}

type SitePluginPackageJsonDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonDevDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonPeerDependencies {
    name: String
    version: String
}

type SitePluginPluginOptions {
    accessToken: String
    allExtensions: Boolean
    anonymize: Boolean
    assetDownloadWorkers: Int
    autoLabel: Boolean
    background_color: String
    base64Width: Int
    cacheDigest: String
    cache_busting_mode: String
    createLinkInHead: Boolean
    cssPropOptimization: Boolean
    defaultQuality: Int
    display: String
    downloadLocal: Boolean
    environment: String
    failOnError: Boolean
    features: [String]
    forceFullSync: Boolean
    head: Boolean
    host: String
    icon: String
    include_favicon: Boolean
    isTSX: Boolean
    jsxPragma: String
    labelFormat: String
    legacy: Boolean
    name: String
    options: SitePluginPluginOptionsOptions
    output: String
    pageLimit: Int
    pageTransitionDelay: Int
    path: String
    pathCheck: Boolean
    policy: [SitePluginPluginOptionsPolicy]
    respectDNT: Boolean
    short_name: String
    sitemap: String
    sourceMap: Boolean
    spaceId: String
    stages: [String]
    start_url: String
    stripMetadata: Boolean
    theme_color: String
    theme_color_in_head: Boolean
    trackingId: String
    useNameForId: Boolean
}

type SitePluginPluginOptionsOptions {
    emitWarning: Boolean
    failOnError: Boolean
}

type SitePluginPluginOptionsPolicy {
    allow: String
    userAgent: String
}

type SiteSiteMetadata {
    author: String
    description: String
    siteUrl: String
    title: String
}

type contentfulJobsDescriptionTextNode implements Node {
    children: [Node!]!
    description: String
    id: ID!
    internal: Internal!
    parent: Node
    sys: contentfulJobsDescriptionTextNodeSys
}

type contentfulJobsDescriptionTextNodeConnection {
    distinct(field: contentfulJobsDescriptionTextNodeFieldsEnum!): [String!]!
    edges: [contentfulJobsDescriptionTextNodeEdge!]!
    group(field: contentfulJobsDescriptionTextNodeFieldsEnum!, limit: Int, skip: Int): [contentfulJobsDescriptionTextNodeGroupConnection!]!
    nodes: [contentfulJobsDescriptionTextNode!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type contentfulJobsDescriptionTextNodeEdge {
    next: contentfulJobsDescriptionTextNode
    node: contentfulJobsDescriptionTextNode!
    previous: contentfulJobsDescriptionTextNode
}

type contentfulJobsDescriptionTextNodeGroupConnection {
    edges: [contentfulJobsDescriptionTextNodeEdge!]!
    field: String!
    fieldValue: String
    nodes: [contentfulJobsDescriptionTextNode!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type contentfulJobsDescriptionTextNodeSys {
    type: String
}

type contentfulServicesCpContentJsonNode implements Node {
    children: [Node!]!
    content: String
    id: ID!
    internal: Internal!
    parent: Node
    sys: contentfulServicesCpContentJsonNodeSys
    title: String
}

type contentfulServicesCpContentJsonNodeConnection {
    distinct(field: contentfulServicesCpContentJsonNodeFieldsEnum!): [String!]!
    edges: [contentfulServicesCpContentJsonNodeEdge!]!
    group(field: contentfulServicesCpContentJsonNodeFieldsEnum!, limit: Int, skip: Int): [contentfulServicesCpContentJsonNodeGroupConnection!]!
    nodes: [contentfulServicesCpContentJsonNode!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type contentfulServicesCpContentJsonNodeEdge {
    next: contentfulServicesCpContentJsonNode
    node: contentfulServicesCpContentJsonNode!
    previous: contentfulServicesCpContentJsonNode
}

type contentfulServicesCpContentJsonNodeGroupConnection {
    edges: [contentfulServicesCpContentJsonNodeEdge!]!
    field: String!
    fieldValue: String
    nodes: [contentfulServicesCpContentJsonNode!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type contentfulServicesCpContentJsonNodeSys {
    type: String
}

enum ContentfulAddressFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    city
    contentful_id
    createdAt
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    phone
    position___lat
    position___lon
    spaceId
    street
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    updatedAt
    zip
}

enum ContentfulArticlesFieldsEnum {
    category___articles
    category___articles___category___articles
    category___articles___category___children
    category___articles___category___contentful_id
    category___articles___category___createdAt
    category___articles___category___id
    category___articles___category___name
    category___articles___category___node_locale
    category___articles___category___spaceId
    category___articles___category___updatedAt
    category___articles___children
    category___articles___children___children
    category___articles___children___id
    category___articles___content___raw
    category___articles___contentful_id
    category___articles___cover___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    category___articles___cover___contentful_id
    category___articles___cover___createdAt
    category___articles___cover___description
    category___articles___cover___id
    category___articles___cover___node_locale
    category___articles___cover___spaceId
    category___articles___cover___title
    category___articles___cover___updatedAt
    category___articles___createdAt
    category___articles___date
    category___articles___description
    category___articles___id
    category___articles___internal___content
    category___articles___internal___contentDigest
    category___articles___internal___description
    category___articles___internal___fieldOwners
    category___articles___internal___ignoreType
    category___articles___internal___mediaType
    category___articles___internal___owner
    category___articles___internal___type
    category___articles___name
    category___articles___node_locale
    category___articles___parent___children
    category___articles___parent___id
    category___articles___slug
    category___articles___spaceId
    category___articles___sys___revision
    category___articles___sys___type
    category___articles___updatedAt
    category___children
    category___children___children
    category___children___children___children
    category___children___children___id
    category___children___id
    category___children___internal___content
    category___children___internal___contentDigest
    category___children___internal___description
    category___children___internal___fieldOwners
    category___children___internal___ignoreType
    category___children___internal___mediaType
    category___children___internal___owner
    category___children___internal___type
    category___children___parent___children
    category___children___parent___id
    category___contentful_id
    category___createdAt
    category___id
    category___internal___content
    category___internal___contentDigest
    category___internal___description
    category___internal___fieldOwners
    category___internal___ignoreType
    category___internal___mediaType
    category___internal___owner
    category___internal___type
    category___name
    category___node_locale
    category___parent___children
    category___parent___children___children
    category___parent___children___id
    category___parent___id
    category___parent___internal___content
    category___parent___internal___contentDigest
    category___parent___internal___description
    category___parent___internal___fieldOwners
    category___parent___internal___ignoreType
    category___parent___internal___mediaType
    category___parent___internal___owner
    category___parent___internal___type
    category___parent___parent___children
    category___parent___parent___id
    category___spaceId
    category___sys___revision
    category___sys___type
    category___updatedAt
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    content___raw
    contentful_id
    cover___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___contentful_id
    cover___createdAt
    cover___description
    cover___file___contentType
    cover___file___details___size
    cover___file___fileName
    cover___file___url
    cover___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___id
    cover___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___node_locale
    cover___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___spaceId
    cover___sys___revision
    cover___sys___type
    cover___title
    cover___updatedAt
    createdAt
    date
    description
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    slug
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    updatedAt
}

enum ContentfulAssetFieldsEnum {
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    contentful_id
    createdAt
    description
    file___contentType
    file___details___image___height
    file___details___image___width
    file___details___size
    file___fileName
    file___url
    fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    node_locale
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    spaceId
    sys___revision
    sys___type
    title
    updatedAt
}

enum ContentfulCategoriesFieldsEnum {
    articles
    articles___category___articles
    articles___category___articles___children
    articles___category___articles___contentful_id
    articles___category___articles___createdAt
    articles___category___articles___date
    articles___category___articles___description
    articles___category___articles___id
    articles___category___articles___name
    articles___category___articles___node_locale
    articles___category___articles___slug
    articles___category___articles___spaceId
    articles___category___articles___updatedAt
    articles___category___children
    articles___category___children___children
    articles___category___children___id
    articles___category___contentful_id
    articles___category___createdAt
    articles___category___id
    articles___category___internal___content
    articles___category___internal___contentDigest
    articles___category___internal___description
    articles___category___internal___fieldOwners
    articles___category___internal___ignoreType
    articles___category___internal___mediaType
    articles___category___internal___owner
    articles___category___internal___type
    articles___category___name
    articles___category___node_locale
    articles___category___parent___children
    articles___category___parent___id
    articles___category___spaceId
    articles___category___sys___revision
    articles___category___sys___type
    articles___category___updatedAt
    articles___children
    articles___children___children
    articles___children___children___children
    articles___children___children___id
    articles___children___id
    articles___children___internal___content
    articles___children___internal___contentDigest
    articles___children___internal___description
    articles___children___internal___fieldOwners
    articles___children___internal___ignoreType
    articles___children___internal___mediaType
    articles___children___internal___owner
    articles___children___internal___type
    articles___children___parent___children
    articles___children___parent___id
    articles___content___raw
    articles___contentful_id
    articles___cover___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___contentful_id
    articles___cover___createdAt
    articles___cover___description
    articles___cover___file___contentType
    articles___cover___file___fileName
    articles___cover___file___url
    articles___cover___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___id
    articles___cover___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___node_locale
    articles___cover___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    articles___cover___spaceId
    articles___cover___sys___revision
    articles___cover___sys___type
    articles___cover___title
    articles___cover___updatedAt
    articles___createdAt
    articles___date
    articles___description
    articles___id
    articles___internal___content
    articles___internal___contentDigest
    articles___internal___description
    articles___internal___fieldOwners
    articles___internal___ignoreType
    articles___internal___mediaType
    articles___internal___owner
    articles___internal___type
    articles___name
    articles___node_locale
    articles___parent___children
    articles___parent___children___children
    articles___parent___children___id
    articles___parent___id
    articles___parent___internal___content
    articles___parent___internal___contentDigest
    articles___parent___internal___description
    articles___parent___internal___fieldOwners
    articles___parent___internal___ignoreType
    articles___parent___internal___mediaType
    articles___parent___internal___owner
    articles___parent___internal___type
    articles___parent___parent___children
    articles___parent___parent___id
    articles___slug
    articles___spaceId
    articles___sys___revision
    articles___sys___type
    articles___updatedAt
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    contentful_id
    createdAt
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    updatedAt
}

enum ContentfulContentTypeFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    description
    displayField
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    sys___type
}

enum ContentfulEntryFieldsEnum {
    contentful_id
    id
    node_locale
}

enum ContentfulImageCropFocus {
    BOTTOM
    BOTTOM_LEFT
    BOTTOM_RIGHT
    CENTER
    FACE
    FACES
    LEFT
    RIGHT
    TOP
    TOP_LEFT
    TOP_RIGHT
}

enum ContentfulImageFormat {
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ContentfulJobsFieldsEnum {
    childContentfulJobsDescriptionTextNode___children
    childContentfulJobsDescriptionTextNode___children___children
    childContentfulJobsDescriptionTextNode___children___children___children
    childContentfulJobsDescriptionTextNode___children___children___id
    childContentfulJobsDescriptionTextNode___children___id
    childContentfulJobsDescriptionTextNode___children___internal___content
    childContentfulJobsDescriptionTextNode___children___internal___contentDigest
    childContentfulJobsDescriptionTextNode___children___internal___description
    childContentfulJobsDescriptionTextNode___children___internal___fieldOwners
    childContentfulJobsDescriptionTextNode___children___internal___ignoreType
    childContentfulJobsDescriptionTextNode___children___internal___mediaType
    childContentfulJobsDescriptionTextNode___children___internal___owner
    childContentfulJobsDescriptionTextNode___children___internal___type
    childContentfulJobsDescriptionTextNode___children___parent___children
    childContentfulJobsDescriptionTextNode___children___parent___id
    childContentfulJobsDescriptionTextNode___description
    childContentfulJobsDescriptionTextNode___id
    childContentfulJobsDescriptionTextNode___internal___content
    childContentfulJobsDescriptionTextNode___internal___contentDigest
    childContentfulJobsDescriptionTextNode___internal___description
    childContentfulJobsDescriptionTextNode___internal___fieldOwners
    childContentfulJobsDescriptionTextNode___internal___ignoreType
    childContentfulJobsDescriptionTextNode___internal___mediaType
    childContentfulJobsDescriptionTextNode___internal___owner
    childContentfulJobsDescriptionTextNode___internal___type
    childContentfulJobsDescriptionTextNode___parent___children
    childContentfulJobsDescriptionTextNode___parent___children___children
    childContentfulJobsDescriptionTextNode___parent___children___id
    childContentfulJobsDescriptionTextNode___parent___id
    childContentfulJobsDescriptionTextNode___parent___internal___content
    childContentfulJobsDescriptionTextNode___parent___internal___contentDigest
    childContentfulJobsDescriptionTextNode___parent___internal___description
    childContentfulJobsDescriptionTextNode___parent___internal___fieldOwners
    childContentfulJobsDescriptionTextNode___parent___internal___ignoreType
    childContentfulJobsDescriptionTextNode___parent___internal___mediaType
    childContentfulJobsDescriptionTextNode___parent___internal___owner
    childContentfulJobsDescriptionTextNode___parent___internal___type
    childContentfulJobsDescriptionTextNode___parent___parent___children
    childContentfulJobsDescriptionTextNode___parent___parent___id
    childContentfulJobsDescriptionTextNode___sys___type
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    content___raw
    contentful_id
    createdAt
    date
    description___children
    description___children___children
    description___children___children___children
    description___children___children___id
    description___children___id
    description___children___internal___content
    description___children___internal___contentDigest
    description___children___internal___description
    description___children___internal___fieldOwners
    description___children___internal___ignoreType
    description___children___internal___mediaType
    description___children___internal___owner
    description___children___internal___type
    description___children___parent___children
    description___children___parent___id
    description___description
    description___id
    description___internal___content
    description___internal___contentDigest
    description___internal___description
    description___internal___fieldOwners
    description___internal___ignoreType
    description___internal___mediaType
    description___internal___owner
    description___internal___type
    description___parent___children
    description___parent___children___children
    description___parent___children___id
    description___parent___id
    description___parent___internal___content
    description___parent___internal___contentDigest
    description___parent___internal___description
    description___parent___internal___fieldOwners
    description___parent___internal___ignoreType
    description___parent___internal___mediaType
    description___parent___internal___owner
    description___parent___internal___type
    description___parent___parent___children
    description___parent___parent___id
    description___sys___type
    file___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___contentful_id
    file___createdAt
    file___description
    file___file___contentType
    file___file___details___size
    file___file___fileName
    file___file___url
    file___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___id
    file___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___node_locale
    file___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    file___spaceId
    file___sys___revision
    file___sys___type
    file___title
    file___updatedAt
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    slug
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    title
    updatedAt
}

enum ContentfulOfferFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    content___raw
    contentful_id
    cover___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___contentful_id
    cover___createdAt
    cover___description
    cover___file___contentType
    cover___file___details___size
    cover___file___fileName
    cover___file___url
    cover___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___id
    cover___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___node_locale
    cover___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___spaceId
    cover___sys___revision
    cover___sys___type
    cover___title
    cover___updatedAt
    createdAt
    description
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    services
    slug
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    updatedAt
}

enum ContentfulServiceFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    content___raw
    contentful_id
    cover___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___contentful_id
    cover___createdAt
    cover___description
    cover___file___contentType
    cover___file___details___size
    cover___file___fileName
    cover___file___url
    cover___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___id
    cover___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___node_locale
    cover___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    cover___spaceId
    cover___sys___revision
    cover___sys___type
    cover___title
    cover___updatedAt
    createdAt
    description
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    services
    slug
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    updatedAt
}

enum ContentfulServicesCpFieldsEnum {
    children
    childrenContentfulServicesCpContentJsonNode
    childrenContentfulServicesCpContentJsonNode___children
    childrenContentfulServicesCpContentJsonNode___children___children
    childrenContentfulServicesCpContentJsonNode___children___children___children
    childrenContentfulServicesCpContentJsonNode___children___children___id
    childrenContentfulServicesCpContentJsonNode___children___id
    childrenContentfulServicesCpContentJsonNode___children___internal___content
    childrenContentfulServicesCpContentJsonNode___children___internal___contentDigest
    childrenContentfulServicesCpContentJsonNode___children___internal___description
    childrenContentfulServicesCpContentJsonNode___children___internal___fieldOwners
    childrenContentfulServicesCpContentJsonNode___children___internal___ignoreType
    childrenContentfulServicesCpContentJsonNode___children___internal___mediaType
    childrenContentfulServicesCpContentJsonNode___children___internal___owner
    childrenContentfulServicesCpContentJsonNode___children___internal___type
    childrenContentfulServicesCpContentJsonNode___children___parent___children
    childrenContentfulServicesCpContentJsonNode___children___parent___id
    childrenContentfulServicesCpContentJsonNode___content
    childrenContentfulServicesCpContentJsonNode___id
    childrenContentfulServicesCpContentJsonNode___internal___content
    childrenContentfulServicesCpContentJsonNode___internal___contentDigest
    childrenContentfulServicesCpContentJsonNode___internal___description
    childrenContentfulServicesCpContentJsonNode___internal___fieldOwners
    childrenContentfulServicesCpContentJsonNode___internal___ignoreType
    childrenContentfulServicesCpContentJsonNode___internal___mediaType
    childrenContentfulServicesCpContentJsonNode___internal___owner
    childrenContentfulServicesCpContentJsonNode___internal___type
    childrenContentfulServicesCpContentJsonNode___parent___children
    childrenContentfulServicesCpContentJsonNode___parent___children___children
    childrenContentfulServicesCpContentJsonNode___parent___children___id
    childrenContentfulServicesCpContentJsonNode___parent___id
    childrenContentfulServicesCpContentJsonNode___parent___internal___content
    childrenContentfulServicesCpContentJsonNode___parent___internal___contentDigest
    childrenContentfulServicesCpContentJsonNode___parent___internal___description
    childrenContentfulServicesCpContentJsonNode___parent___internal___fieldOwners
    childrenContentfulServicesCpContentJsonNode___parent___internal___ignoreType
    childrenContentfulServicesCpContentJsonNode___parent___internal___mediaType
    childrenContentfulServicesCpContentJsonNode___parent___internal___owner
    childrenContentfulServicesCpContentJsonNode___parent___internal___type
    childrenContentfulServicesCpContentJsonNode___parent___parent___children
    childrenContentfulServicesCpContentJsonNode___parent___parent___id
    childrenContentfulServicesCpContentJsonNode___sys___type
    childrenContentfulServicesCpContentJsonNode___title
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    content
    content___children
    content___children___children
    content___children___children___children
    content___children___children___id
    content___children___id
    content___children___internal___content
    content___children___internal___contentDigest
    content___children___internal___description
    content___children___internal___fieldOwners
    content___children___internal___ignoreType
    content___children___internal___mediaType
    content___children___internal___owner
    content___children___internal___type
    content___children___parent___children
    content___children___parent___id
    content___content
    content___id
    content___internal___content
    content___internal___contentDigest
    content___internal___description
    content___internal___fieldOwners
    content___internal___ignoreType
    content___internal___mediaType
    content___internal___owner
    content___internal___type
    content___parent___children
    content___parent___children___children
    content___parent___children___id
    content___parent___id
    content___parent___internal___content
    content___parent___internal___contentDigest
    content___parent___internal___description
    content___parent___internal___fieldOwners
    content___parent___internal___ignoreType
    content___parent___internal___mediaType
    content___parent___internal___owner
    content___parent___internal___type
    content___parent___parent___children
    content___parent___parent___id
    content___sys___type
    content___title
    contentful_id
    createdAt
    id
    image___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___contentful_id
    image___createdAt
    image___description
    image___file___contentType
    image___file___details___size
    image___file___fileName
    image___file___url
    image___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___id
    image___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___node_locale
    image___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___spaceId
    image___sys___revision
    image___sys___type
    image___title
    image___updatedAt
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    node_locale
    order
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    slug
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    updatedAt
}

enum ContentfulServicesFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    contentful_id
    createdAt
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    node_locale
    order
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    slug
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    text___raw
    title
    updatedAt
}

enum ContentfulSignatureFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    contentful_id
    createdAt
    firstName
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    lastName
    legal
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    title
    updatedAt
}

enum ContentfulSignatureLogoFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    contentful_id
    createdAt
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    logo___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___contentful_id
    logo___createdAt
    logo___description
    logo___file___contentType
    logo___file___details___size
    logo___file___fileName
    logo___file___url
    logo___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___id
    logo___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___node_locale
    logo___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resize___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    logo___spaceId
    logo___sys___revision
    logo___sys___type
    logo___title
    logo___updatedAt
    node_locale
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    spaceId
    sys___contentType___sys___id
    sys___contentType___sys___linkType
    sys___contentType___sys___type
    sys___revision
    sys___type
    updatedAt
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    AUTO
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageLayout {
    CONSTRAINED
    FIXED
    FLUID
}

enum ImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageResizingBehavior {
    "Crop a part of the original image to match the specified size."
    CROP
    "Crop the image to the specified dimensions, if the original image is smaller than these dimensions, then the image will be upscaled."
    FILL
    NO_CHANGE
    "Same as the default resizing, but adds padding so that the generated image has the specified dimensions."
    PAD
    "Scale the image regardless of the original aspect ratio."
    SCALE
    "When used in association with the f parameter below, creates a thumbnail from the image based on a focus area."
    THUMB
}

enum ImageSharpFieldsEnum {
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pathPrefix
    polyfill
    port
    siteMetadata___author
    siteMetadata___description
    siteMetadata___siteUrl
    siteMetadata___title
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    componentPath
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    isCreatedByStatefulCreatePages
    matchPath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreatorId
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson___author
    pluginCreator___packageJson___dependencies
    pluginCreator___packageJson___dependencies___name
    pluginCreator___packageJson___dependencies___version
    pluginCreator___packageJson___description
    pluginCreator___packageJson___devDependencies
    pluginCreator___packageJson___devDependencies___name
    pluginCreator___packageJson___devDependencies___version
    pluginCreator___packageJson___keywords
    pluginCreator___packageJson___license
    pluginCreator___packageJson___main
    pluginCreator___packageJson___name
    pluginCreator___packageJson___peerDependencies
    pluginCreator___packageJson___peerDependencies___name
    pluginCreator___packageJson___peerDependencies___version
    pluginCreator___packageJson___version
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions___accessToken
    pluginCreator___pluginOptions___allExtensions
    pluginCreator___pluginOptions___anonymize
    pluginCreator___pluginOptions___assetDownloadWorkers
    pluginCreator___pluginOptions___autoLabel
    pluginCreator___pluginOptions___background_color
    pluginCreator___pluginOptions___base64Width
    pluginCreator___pluginOptions___cacheDigest
    pluginCreator___pluginOptions___cache_busting_mode
    pluginCreator___pluginOptions___createLinkInHead
    pluginCreator___pluginOptions___cssPropOptimization
    pluginCreator___pluginOptions___defaultQuality
    pluginCreator___pluginOptions___display
    pluginCreator___pluginOptions___downloadLocal
    pluginCreator___pluginOptions___environment
    pluginCreator___pluginOptions___failOnError
    pluginCreator___pluginOptions___features
    pluginCreator___pluginOptions___forceFullSync
    pluginCreator___pluginOptions___head
    pluginCreator___pluginOptions___host
    pluginCreator___pluginOptions___icon
    pluginCreator___pluginOptions___include_favicon
    pluginCreator___pluginOptions___isTSX
    pluginCreator___pluginOptions___jsxPragma
    pluginCreator___pluginOptions___labelFormat
    pluginCreator___pluginOptions___legacy
    pluginCreator___pluginOptions___name
    pluginCreator___pluginOptions___options___emitWarning
    pluginCreator___pluginOptions___options___failOnError
    pluginCreator___pluginOptions___output
    pluginCreator___pluginOptions___pageLimit
    pluginCreator___pluginOptions___pageTransitionDelay
    pluginCreator___pluginOptions___path
    pluginCreator___pluginOptions___pathCheck
    pluginCreator___pluginOptions___policy
    pluginCreator___pluginOptions___policy___allow
    pluginCreator___pluginOptions___policy___userAgent
    pluginCreator___pluginOptions___respectDNT
    pluginCreator___pluginOptions___short_name
    pluginCreator___pluginOptions___sitemap
    pluginCreator___pluginOptions___sourceMap
    pluginCreator___pluginOptions___spaceId
    pluginCreator___pluginOptions___stages
    pluginCreator___pluginOptions___start_url
    pluginCreator___pluginOptions___stripMetadata
    pluginCreator___pluginOptions___theme_color
    pluginCreator___pluginOptions___theme_color_in_head
    pluginCreator___pluginOptions___trackingId
    pluginCreator___pluginOptions___useNameForId
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson___author
    packageJson___dependencies
    packageJson___dependencies___name
    packageJson___dependencies___version
    packageJson___description
    packageJson___devDependencies
    packageJson___devDependencies___name
    packageJson___devDependencies___version
    packageJson___keywords
    packageJson___license
    packageJson___main
    packageJson___name
    packageJson___peerDependencies
    packageJson___peerDependencies___name
    packageJson___peerDependencies___version
    packageJson___version
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions___accessToken
    pluginOptions___allExtensions
    pluginOptions___anonymize
    pluginOptions___assetDownloadWorkers
    pluginOptions___autoLabel
    pluginOptions___background_color
    pluginOptions___base64Width
    pluginOptions___cacheDigest
    pluginOptions___cache_busting_mode
    pluginOptions___createLinkInHead
    pluginOptions___cssPropOptimization
    pluginOptions___defaultQuality
    pluginOptions___display
    pluginOptions___downloadLocal
    pluginOptions___environment
    pluginOptions___failOnError
    pluginOptions___features
    pluginOptions___forceFullSync
    pluginOptions___head
    pluginOptions___host
    pluginOptions___icon
    pluginOptions___include_favicon
    pluginOptions___isTSX
    pluginOptions___jsxPragma
    pluginOptions___labelFormat
    pluginOptions___legacy
    pluginOptions___name
    pluginOptions___options___emitWarning
    pluginOptions___options___failOnError
    pluginOptions___output
    pluginOptions___pageLimit
    pluginOptions___pageTransitionDelay
    pluginOptions___path
    pluginOptions___pathCheck
    pluginOptions___policy
    pluginOptions___policy___allow
    pluginOptions___policy___userAgent
    pluginOptions___respectDNT
    pluginOptions___short_name
    pluginOptions___sitemap
    pluginOptions___sourceMap
    pluginOptions___spaceId
    pluginOptions___stages
    pluginOptions___start_url
    pluginOptions___stripMetadata
    pluginOptions___theme_color
    pluginOptions___theme_color_in_head
    pluginOptions___trackingId
    pluginOptions___useNameForId
    resolve
    ssrAPIs
    version
}

enum SortOrderEnum {
    ASC
    DESC
}

enum contentfulJobsDescriptionTextNodeFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    description
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    sys___type
}

enum contentfulServicesCpContentJsonNodeFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    content
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    sys___type
    title
}

"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input BlurredOptions {
    "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
    toFormat: ImageFormat
    "Width of the generated low-res preview. Default is 20px"
    width: Int
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input ContentfulAddressFilterInput {
    children: NodeFilterListInput
    city: StringQueryOperatorInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    phone: StringQueryOperatorInput
    position: ContentfulAddressPositionFilterInput
    spaceId: StringQueryOperatorInput
    street: StringQueryOperatorInput
    sys: ContentfulAddressSysFilterInput
    updatedAt: DateQueryOperatorInput
    zip: StringQueryOperatorInput
}

input ContentfulAddressPositionFilterInput {
    lat: FloatQueryOperatorInput
    lon: FloatQueryOperatorInput
}

input ContentfulAddressSortInput {
    fields: [ContentfulAddressFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulAddressSysContentTypeFilterInput {
    sys: ContentfulAddressSysContentTypeSysFilterInput
}

input ContentfulAddressSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulAddressSysFilterInput {
    contentType: ContentfulAddressSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulArticlesContentFilterInput {
    raw: StringQueryOperatorInput
}

input ContentfulArticlesFilterInput {
    category: ContentfulCategoriesFilterInput
    children: NodeFilterListInput
    content: ContentfulArticlesContentFilterInput
    contentful_id: StringQueryOperatorInput
    cover: ContentfulAssetFilterInput
    createdAt: DateQueryOperatorInput
    date: DateQueryOperatorInput
    description: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    slug: StringQueryOperatorInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulArticlesSysFilterInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulArticlesFilterListInput {
    elemMatch: ContentfulArticlesFilterInput
}

input ContentfulArticlesSortInput {
    fields: [ContentfulArticlesFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulArticlesSysContentTypeFilterInput {
    sys: ContentfulArticlesSysContentTypeSysFilterInput
}

input ContentfulArticlesSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulArticlesSysFilterInput {
    contentType: ContentfulArticlesSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulAssetFileDetailsFilterInput {
    image: ContentfulAssetFileDetailsImageFilterInput
    size: IntQueryOperatorInput
}

input ContentfulAssetFileDetailsImageFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input ContentfulAssetFileFilterInput {
    contentType: StringQueryOperatorInput
    details: ContentfulAssetFileDetailsFilterInput
    fileName: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input ContentfulAssetFilterInput {
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    description: StringQueryOperatorInput
    file: ContentfulAssetFileFilterInput
    fixed: ContentfulFixedFilterInput
    fluid: ContentfulFluidFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    resize: ContentfulResizeFilterInput
    resolutions: ContentfulResolutionsFilterInput
    sizes: ContentfulSizesFilterInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulAssetSysFilterInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulAssetSortInput {
    fields: [ContentfulAssetFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulAssetSysFilterInput {
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulCategoriesFilterInput {
    articles: ContentfulArticlesFilterListInput
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulCategoriesSysFilterInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulCategoriesSortInput {
    fields: [ContentfulCategoriesFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulCategoriesSysContentTypeFilterInput {
    sys: ContentfulCategoriesSysContentTypeSysFilterInput
}

input ContentfulCategoriesSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulCategoriesSysFilterInput {
    contentType: ContentfulCategoriesSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulContentTypeFilterInput {
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    displayField: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    parent: NodeFilterInput
    sys: ContentfulContentTypeSysFilterInput
}

input ContentfulContentTypeSortInput {
    fields: [ContentfulContentTypeFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulContentTypeSysFilterInput {
    type: StringQueryOperatorInput
}

input ContentfulEntryFilterInput {
    contentful_id: StringQueryOperatorInput
    id: StringQueryOperatorInput
    node_locale: StringQueryOperatorInput
}

input ContentfulEntrySortInput {
    fields: [ContentfulEntryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ContentfulFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ContentfulJobsContentFilterInput {
    raw: StringQueryOperatorInput
}

input ContentfulJobsFilterInput {
    childContentfulJobsDescriptionTextNode: contentfulJobsDescriptionTextNodeFilterInput
    children: NodeFilterListInput
    content: ContentfulJobsContentFilterInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    date: DateQueryOperatorInput
    description: contentfulJobsDescriptionTextNodeFilterInput
    file: ContentfulAssetFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    slug: StringQueryOperatorInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulJobsSysFilterInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulJobsSortInput {
    fields: [ContentfulJobsFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulJobsSysContentTypeFilterInput {
    sys: ContentfulJobsSysContentTypeSysFilterInput
}

input ContentfulJobsSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulJobsSysFilterInput {
    contentType: ContentfulJobsSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulOfferContentFilterInput {
    raw: StringQueryOperatorInput
}

input ContentfulOfferFilterInput {
    children: NodeFilterListInput
    content: ContentfulOfferContentFilterInput
    contentful_id: StringQueryOperatorInput
    cover: ContentfulAssetFilterInput
    createdAt: DateQueryOperatorInput
    description: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    services: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulOfferSysFilterInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulOfferSortInput {
    fields: [ContentfulOfferFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulOfferSysContentTypeFilterInput {
    sys: ContentfulOfferSysContentTypeSysFilterInput
}

input ContentfulOfferSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulOfferSysFilterInput {
    contentType: ContentfulOfferSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: IntQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ContentfulResolutionsFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ContentfulServiceContentFilterInput {
    raw: StringQueryOperatorInput
}

input ContentfulServiceFilterInput {
    children: NodeFilterListInput
    content: ContentfulServiceContentFilterInput
    contentful_id: StringQueryOperatorInput
    cover: ContentfulAssetFilterInput
    createdAt: DateQueryOperatorInput
    description: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    services: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulServiceSysFilterInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulServiceSortInput {
    fields: [ContentfulServiceFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulServiceSysContentTypeFilterInput {
    sys: ContentfulServiceSysContentTypeSysFilterInput
}

input ContentfulServiceSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulServiceSysFilterInput {
    contentType: ContentfulServiceSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulServicesCpFilterInput {
    children: NodeFilterListInput
    childrenContentfulServicesCpContentJsonNode: contentfulServicesCpContentJsonNodeFilterListInput
    content: contentfulServicesCpContentJsonNodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    id: StringQueryOperatorInput
    image: ContentfulAssetFilterInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    node_locale: StringQueryOperatorInput
    order: IntQueryOperatorInput
    parent: NodeFilterInput
    slug: StringQueryOperatorInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulServicesCpSysFilterInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulServicesCpSortInput {
    fields: [ContentfulServicesCpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulServicesCpSysContentTypeFilterInput {
    sys: ContentfulServicesCpSysContentTypeSysFilterInput
}

input ContentfulServicesCpSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulServicesCpSysFilterInput {
    contentType: ContentfulServicesCpSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulServicesFilterInput {
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    node_locale: StringQueryOperatorInput
    order: IntQueryOperatorInput
    parent: NodeFilterInput
    slug: StringQueryOperatorInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulServicesSysFilterInput
    text: ContentfulServicesTextFilterInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulServicesSortInput {
    fields: [ContentfulServicesFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulServicesSysContentTypeFilterInput {
    sys: ContentfulServicesSysContentTypeSysFilterInput
}

input ContentfulServicesSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulServicesSysFilterInput {
    contentType: ContentfulServicesSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulServicesTextFilterInput {
    raw: StringQueryOperatorInput
}

input ContentfulSignatureFilterInput {
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    firstName: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    lastName: StringQueryOperatorInput
    legal: BooleanQueryOperatorInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulSignatureSysFilterInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulSignatureLogoFilterInput {
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    logo: ContentfulAssetFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulSignatureLogoSysFilterInput
    updatedAt: DateQueryOperatorInput
}

input ContentfulSignatureLogoSortInput {
    fields: [ContentfulSignatureLogoFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulSignatureLogoSysContentTypeFilterInput {
    sys: ContentfulSignatureLogoSysContentTypeSysFilterInput
}

input ContentfulSignatureLogoSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulSignatureLogoSysFilterInput {
    contentType: ContentfulSignatureLogoSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulSignatureSortInput {
    fields: [ContentfulSignatureFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ContentfulSignatureSysContentTypeFilterInput {
    sys: ContentfulSignatureSysContentTypeSysFilterInput
}

input ContentfulSignatureSysContentTypeSysFilterInput {
    id: StringQueryOperatorInput
    linkType: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulSignatureSysFilterInput {
    contentType: ContentfulSignatureSysContentTypeFilterInput
    revision: IntQueryOperatorInput
    type: StringQueryOperatorInput
}

input ContentfulSizesFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
    resolutions: ImageSharpResolutionsFilterInput
    sizes: ImageSharpSizesFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpResolutionsFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpSizesFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JPGOptions {
    progressive: Boolean = true
    quality: Int
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input PNGOptions {
    compressionSpeed: Int = 4
    quality: Int
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    componentPath: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
    matchPath: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
    pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: SitePluginPackageJsonFilterInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: SitePluginPluginOptionsFilterInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
    author: StringQueryOperatorInput
    dependencies: SitePluginPackageJsonDependenciesFilterListInput
    description: StringQueryOperatorInput
    devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
    keywords: StringQueryOperatorInput
    license: StringQueryOperatorInput
    main: StringQueryOperatorInput
    name: StringQueryOperatorInput
    peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsFilterInput {
    accessToken: StringQueryOperatorInput
    allExtensions: BooleanQueryOperatorInput
    anonymize: BooleanQueryOperatorInput
    assetDownloadWorkers: IntQueryOperatorInput
    autoLabel: BooleanQueryOperatorInput
    background_color: StringQueryOperatorInput
    base64Width: IntQueryOperatorInput
    cacheDigest: StringQueryOperatorInput
    cache_busting_mode: StringQueryOperatorInput
    createLinkInHead: BooleanQueryOperatorInput
    cssPropOptimization: BooleanQueryOperatorInput
    defaultQuality: IntQueryOperatorInput
    display: StringQueryOperatorInput
    downloadLocal: BooleanQueryOperatorInput
    environment: StringQueryOperatorInput
    failOnError: BooleanQueryOperatorInput
    features: StringQueryOperatorInput
    forceFullSync: BooleanQueryOperatorInput
    head: BooleanQueryOperatorInput
    host: StringQueryOperatorInput
    icon: StringQueryOperatorInput
    include_favicon: BooleanQueryOperatorInput
    isTSX: BooleanQueryOperatorInput
    jsxPragma: StringQueryOperatorInput
    labelFormat: StringQueryOperatorInput
    legacy: BooleanQueryOperatorInput
    name: StringQueryOperatorInput
    options: SitePluginPluginOptionsOptionsFilterInput
    output: StringQueryOperatorInput
    pageLimit: IntQueryOperatorInput
    pageTransitionDelay: IntQueryOperatorInput
    path: StringQueryOperatorInput
    pathCheck: BooleanQueryOperatorInput
    policy: SitePluginPluginOptionsPolicyFilterListInput
    respectDNT: BooleanQueryOperatorInput
    short_name: StringQueryOperatorInput
    sitemap: StringQueryOperatorInput
    sourceMap: BooleanQueryOperatorInput
    spaceId: StringQueryOperatorInput
    stages: StringQueryOperatorInput
    start_url: StringQueryOperatorInput
    stripMetadata: BooleanQueryOperatorInput
    theme_color: StringQueryOperatorInput
    theme_color_in_head: BooleanQueryOperatorInput
    trackingId: StringQueryOperatorInput
    useNameForId: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsOptionsFilterInput {
    emitWarning: BooleanQueryOperatorInput
    failOnError: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsPolicyFilterInput {
    allow: StringQueryOperatorInput
    userAgent: StringQueryOperatorInput
}

input SitePluginPluginOptionsPolicyFilterListInput {
    elemMatch: SitePluginPluginOptionsPolicyFilterInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
    author: StringQueryOperatorInput
    description: StringQueryOperatorInput
    siteUrl: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}

input TransformOptions {
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    rotate: Int = 0
    trim: Float = 0.0
}

input WebPOptions {
    quality: Int
}

input contentfulJobsDescriptionTextNodeFilterInput {
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    sys: contentfulJobsDescriptionTextNodeSysFilterInput
}

input contentfulJobsDescriptionTextNodeSortInput {
    fields: [contentfulJobsDescriptionTextNodeFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input contentfulJobsDescriptionTextNodeSysFilterInput {
    type: StringQueryOperatorInput
}

input contentfulServicesCpContentJsonNodeFilterInput {
    children: NodeFilterListInput
    content: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    sys: contentfulServicesCpContentJsonNodeSysFilterInput
    title: StringQueryOperatorInput
}

input contentfulServicesCpContentJsonNodeFilterListInput {
    elemMatch: contentfulServicesCpContentJsonNodeFilterInput
}

input contentfulServicesCpContentJsonNodeSortInput {
    fields: [contentfulServicesCpContentJsonNodeFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input contentfulServicesCpContentJsonNodeSysFilterInput {
    type: StringQueryOperatorInput
}
